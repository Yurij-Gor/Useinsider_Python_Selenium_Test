{"uid":"9f915e206f7f55ab","name":"Test navigation and verification on Insider Careers page","fullName":"tests.test_insider#test_insider_careers","historyId":"4e8aa1eeb781a5479f79bf27de807ed5","time":{"start":1731546723178,"stop":1731546786994,"duration":63816},"description":"\nTest case to verify key steps on the Insider website:\n1. Navigate to the Careers page and open Careers section.\n2. Verify the presence of key blocks with expected names on the Careers page.\n3. Navigate to the QA job listings page.\n4. Apply location and department filters on the QA jobs listing.\n5. Confirm navigation to the Lever application form after clicking 'View Role' on a job listing.\n","descriptionHtml":"<p>Test case to verify key steps on the Insider website:</p>\n<ol>\n<li>Navigate to the Careers page and open Careers section.</li>\n<li>Verify the presence of key blocks with expected names on the Careers page.</li>\n<li>Navigate to the QA job listings page.</li>\n<li>Apply location and department filters on the QA jobs listing.</li>\n<li>Confirm navigation to the Lever application form after clicking 'View Role' on a job listing.</li>\n</ol>\n","status":"failed","statusMessage":"AssertionError: Test failed with errors: Teams verification error: Name mismatch for block 'teams': Expected 'Teams', but found 'Find your calling'; Locations verification error: Name mismatch for block 'locations': Expected 'Locations', but found 'Our Locations'\nassert False","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f89f7951815ce3026ba6d90229211a2c\")>\n\n    @allure.feature(\"Insider Careers Testing - Careers Page Validation\")\n    @allure.story(\"Navigate, verify blocks, apply filters, and confirm job listings\")\n    @allure.title(\"Test navigation and verification on Insider Careers page\")\n    @allure.description(\"\"\"\n    Test case to verify key steps on the Insider website:\n    1. Navigate to the Careers page and open Careers section.\n    2. Verify the presence of key blocks with expected names on the Careers page.\n    3. Navigate to the QA job listings page.\n    4. Apply location and department filters on the QA jobs listing.\n    5. Confirm navigation to the Lever application form after clicking 'View Role' on a job listing.\n    \"\"\")\n    @pytest.mark.usefixtures(\"driver\")\n    def test_insider_careers(driver):\n        errors = []  # List to collect errors without halting the test\n    \n        # Step 1: Navigate to the Careers page\n        home_page = HomePage(driver)\n        with allure.step(\"Step 1: Navigate to Careers page and open Careers section\"):\n            try:\n                home_page.open()\n                home_page.go_to_careers()\n            except (TimeoutException, NoSuchElementException) as e:\n                error_message = f\"Failed to navigate to Careers page: {str(e)}\"\n                allure.attach(error_message, name=\"Navigation Error\", attachment_type=allure.attachment_type.TEXT)\n                errors.append(error_message)\n    \n        # Step 2: Verify presence of key blocks on the Careers page\n        careers_page = CareersPage(driver)\n        with allure.step(\"Step 2: Verify presence of key blocks on the Careers page\"):\n            for block_name in [\"teams\", \"locations\", \"life_at_insider\"]:\n                try:\n                    careers_page.verify_block_presence(block_name)\n                except AssertionError as e:\n                    screenshot_path = careers_page.take_screenshot(f\"{block_name}_verification_failure\")\n                    if screenshot_path:\n                        allure.attach.file(screenshot_path, name=f\"{block_name.capitalize()} Verification Failure Screenshot\", attachment_type=allure.attachment_type.PNG)\n                    errors.append(f\"{block_name.capitalize()} verification error: {str(e)}\")\n    \n        # Step 3: Navigate to QA page\n        qa_page = QualityAssurancePage(driver)\n        with allure.step(\"Step 3: Navigate to QA job listings\"):\n            try:\n                qa_page.open()\n                qa_page.click_see_all_qa_jobs()\n            except (TimeoutException, NoSuchElementException) as e:\n                screenshot_path = qa_page.take_screenshot(\"qa_jobs_navigation_failure\")\n                if screenshot_path:\n                    allure.attach.file(screenshot_path, name=\"QA Jobs Navigation Failure Screenshot\", attachment_type=allure.attachment_type.PNG)\n                errors.append(f\"QA Jobs navigation error: {str(e)}\")\n    \n        # Step 4: Apply filters and verify job listings\n        open_positions_page = OpenPositionsPage(driver)\n        with allure.step(\"Step 4: Apply filters and verify QA jobs listing\"):\n            try:\n                open_positions_page.apply_filters()\n                open_positions_page.verify_jobs()\n            except (TimeoutException, NoSuchElementException, AssertionError) as e:\n                screenshot_path = open_positions_page.take_screenshot(\"job_filters_verification_failure\")\n                if screenshot_path:\n                    allure.attach.file(screenshot_path, name=\"Job Filters Verification Failure Screenshot\", attachment_type=allure.attachment_type.PNG)\n                errors.append(f\"Job Filters verification error: {str(e)}\")\n    \n        # Step 5: Click \"View Role\" and verify navigation to Lever application form page\n        with allure.step(\"Step 5: Click 'View Role' and verify navigation to Lever application form page\"):\n            try:\n                open_positions_page.open_first_job()\n            except Exception as e:\n                error_message = f\"Lever application navigation error: {str(e)}\"\n                allure.attach(error_message, name=\"Lever Navigation Error\", attachment_type=allure.attachment_type.TEXT)\n                errors.append(error_message)\n    \n        # Final assertion to mark test as failed if any errors were collected\n        if errors:\n            allure.attach(\"\\n\".join(errors), name=\"Collected Errors\", attachment_type=allure.attachment_type.TEXT)\n>           assert False, \"Test failed with errors: \" + \"; \".join(errors)\nE           AssertionError: Test failed with errors: Teams verification error: Name mismatch for block 'teams': Expected 'Teams', but found 'Find your calling'; Locations verification error: Name mismatch for block 'locations': Expected 'Locations', but found 'Our Locations'\nE           assert False\n\ntests\\test_insider.py:106: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1731546713740,"stop":1731546723176,"duration":9436},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"description":"\nTest case to verify key steps on the Insider website:\n1. Navigate to the Careers page and open Careers section.\n2. Verify the presence of key blocks with expected names on the Careers page.\n3. Navigate to the QA job listings page.\n4. Apply location and department filters on the QA jobs listing.\n5. Confirm navigation to the Lever application form after clicking 'View Role' on a job listing.\n","status":"failed","statusMessage":"AssertionError: Test failed with errors: Teams verification error: Name mismatch for block 'teams': Expected 'Teams', but found 'Find your calling'; Locations verification error: Name mismatch for block 'locations': Expected 'Locations', but found 'Our Locations'\nassert False","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f89f7951815ce3026ba6d90229211a2c\")>\n\n    @allure.feature(\"Insider Careers Testing - Careers Page Validation\")\n    @allure.story(\"Navigate, verify blocks, apply filters, and confirm job listings\")\n    @allure.title(\"Test navigation and verification on Insider Careers page\")\n    @allure.description(\"\"\"\n    Test case to verify key steps on the Insider website:\n    1. Navigate to the Careers page and open Careers section.\n    2. Verify the presence of key blocks with expected names on the Careers page.\n    3. Navigate to the QA job listings page.\n    4. Apply location and department filters on the QA jobs listing.\n    5. Confirm navigation to the Lever application form after clicking 'View Role' on a job listing.\n    \"\"\")\n    @pytest.mark.usefixtures(\"driver\")\n    def test_insider_careers(driver):\n        errors = []  # List to collect errors without halting the test\n    \n        # Step 1: Navigate to the Careers page\n        home_page = HomePage(driver)\n        with allure.step(\"Step 1: Navigate to Careers page and open Careers section\"):\n            try:\n                home_page.open()\n                home_page.go_to_careers()\n            except (TimeoutException, NoSuchElementException) as e:\n                error_message = f\"Failed to navigate to Careers page: {str(e)}\"\n                allure.attach(error_message, name=\"Navigation Error\", attachment_type=allure.attachment_type.TEXT)\n                errors.append(error_message)\n    \n        # Step 2: Verify presence of key blocks on the Careers page\n        careers_page = CareersPage(driver)\n        with allure.step(\"Step 2: Verify presence of key blocks on the Careers page\"):\n            for block_name in [\"teams\", \"locations\", \"life_at_insider\"]:\n                try:\n                    careers_page.verify_block_presence(block_name)\n                except AssertionError as e:\n                    screenshot_path = careers_page.take_screenshot(f\"{block_name}_verification_failure\")\n                    if screenshot_path:\n                        allure.attach.file(screenshot_path, name=f\"{block_name.capitalize()} Verification Failure Screenshot\", attachment_type=allure.attachment_type.PNG)\n                    errors.append(f\"{block_name.capitalize()} verification error: {str(e)}\")\n    \n        # Step 3: Navigate to QA page\n        qa_page = QualityAssurancePage(driver)\n        with allure.step(\"Step 3: Navigate to QA job listings\"):\n            try:\n                qa_page.open()\n                qa_page.click_see_all_qa_jobs()\n            except (TimeoutException, NoSuchElementException) as e:\n                screenshot_path = qa_page.take_screenshot(\"qa_jobs_navigation_failure\")\n                if screenshot_path:\n                    allure.attach.file(screenshot_path, name=\"QA Jobs Navigation Failure Screenshot\", attachment_type=allure.attachment_type.PNG)\n                errors.append(f\"QA Jobs navigation error: {str(e)}\")\n    \n        # Step 4: Apply filters and verify job listings\n        open_positions_page = OpenPositionsPage(driver)\n        with allure.step(\"Step 4: Apply filters and verify QA jobs listing\"):\n            try:\n                open_positions_page.apply_filters()\n                open_positions_page.verify_jobs()\n            except (TimeoutException, NoSuchElementException, AssertionError) as e:\n                screenshot_path = open_positions_page.take_screenshot(\"job_filters_verification_failure\")\n                if screenshot_path:\n                    allure.attach.file(screenshot_path, name=\"Job Filters Verification Failure Screenshot\", attachment_type=allure.attachment_type.PNG)\n                errors.append(f\"Job Filters verification error: {str(e)}\")\n    \n        # Step 5: Click \"View Role\" and verify navigation to Lever application form page\n        with allure.step(\"Step 5: Click 'View Role' and verify navigation to Lever application form page\"):\n            try:\n                open_positions_page.open_first_job()\n            except Exception as e:\n                error_message = f\"Lever application navigation error: {str(e)}\"\n                allure.attach(error_message, name=\"Lever Navigation Error\", attachment_type=allure.attachment_type.TEXT)\n                errors.append(error_message)\n    \n        # Final assertion to mark test as failed if any errors were collected\n        if errors:\n            allure.attach(\"\\n\".join(errors), name=\"Collected Errors\", attachment_type=allure.attachment_type.TEXT)\n>           assert False, \"Test failed with errors: \" + \"; \".join(errors)\nE           AssertionError: Test failed with errors: Teams verification error: Name mismatch for block 'teams': Expected 'Teams', but found 'Find your calling'; Locations verification error: Name mismatch for block 'locations': Expected 'Locations', but found 'Our Locations'\nE           assert False\n\ntests\\test_insider.py:106: AssertionError","steps":[{"name":"Step 1: Navigate to Careers page and open Careers section","time":{"start":1731546723178,"stop":1731546747309,"duration":24131},"status":"passed","steps":[{"name":"Accept cookies on the website if the banner is present","time":{"start":1731546739058,"stop":1731546741010,"duration":1952},"status":"passed","steps":[],"attachments":[{"uid":"c7424ce2ce0e3b4f","name":"Cookie Acceptance","source":"c7424ce2ce0e3b4f.attach","type":"text/plain","size":17}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":1}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":1},{"name":"Step 2: Verify presence of key blocks on the Careers page","time":{"start":1731546747309,"stop":1731546750833,"duration":3524},"status":"passed","steps":[{"name":"Verify presence and expected name of block: 'teams'","time":{"start":1731546747310,"stop":1731546748775,"duration":1465},"status":"failed","statusMessage":"AssertionError: Name mismatch for block 'teams': Expected 'Teams', but found 'Find your calling'\n","statusTrace":"  File \"D:\\Python\\Useinsider_Python_Selenium_Test\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\Python\\Useinsider_Python_Selenium_Test\\pages\\careers_page.py\", line 49, in verify_block_presence\n    raise AssertionError(\n","steps":[{"name":"Scrolling element into view and taking centered screenshot","time":{"start":1731546747418,"stop":1731546748775,"duration":1357},"status":"passed","steps":[],"attachments":[{"uid":"a7ce1a7b612be7f3","name":"Screenshot: teams_name_mismatch","source":"a7ce1a7b612be7f3.png","type":"image/png","size":447721}],"parameters":[{"name":"name","value":"'teams_name_mismatch'"},{"name":"locator","value":"('css selector', '#career-find-our-calling')"},{"name":"browser_name","value":"None"}],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":1}],"attachments":[{"uid":"95ecc2e2312039c","name":"Teams Verification Result","source":"95ecc2e2312039c.txt","type":"text/plain","size":45}],"parameters":[{"name":"block_name","value":"'teams'"}],"hasContent":true,"attachmentStep":false,"stepsCount":1,"shouldDisplayMessage":true,"attachmentsCount":2},{"name":"Verify presence and expected name of block: 'locations'","time":{"start":1731546749066,"stop":1731546750413,"duration":1347},"status":"failed","statusMessage":"AssertionError: Name mismatch for block 'locations': Expected 'Locations', but found 'Our Locations'\n","statusTrace":"  File \"D:\\Python\\Useinsider_Python_Selenium_Test\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\Python\\Useinsider_Python_Selenium_Test\\pages\\careers_page.py\", line 49, in verify_block_presence\n    raise AssertionError(\n","steps":[{"name":"Scrolling element into view and taking centered screenshot","time":{"start":1731546749125,"stop":1731546750413,"duration":1288},"status":"passed","steps":[],"attachments":[{"uid":"278605cd95247e69","name":"Screenshot: locations_name_mismatch","source":"278605cd95247e69.png","type":"image/png","size":153367}],"parameters":[{"name":"name","value":"'locations_name_mismatch'"},{"name":"locator","value":"('css selector', '#career-our-location')"},{"name":"browser_name","value":"None"}],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":1}],"attachments":[{"uid":"e7f3b47ded935df4","name":"Locations Verification Result","source":"e7f3b47ded935df4.txt","type":"text/plain","size":45}],"parameters":[{"name":"block_name","value":"'locations'"}],"hasContent":true,"attachmentStep":false,"stepsCount":1,"shouldDisplayMessage":true,"attachmentsCount":2},{"name":"Verify presence and expected name of block: 'life_at_insider'","time":{"start":1731546750668,"stop":1731546750833,"duration":165},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"block_name","value":"'life_at_insider'"}],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[{"uid":"eed81ca0eb858c51","name":"Screenshot: teams_verification_failure","source":"eed81ca0eb858c51.png","type":"image/png","size":447721},{"uid":"7d3e333ce5c9c45c","name":"Teams Verification Failure Screenshot","source":"7d3e333ce5c9c45c.png","type":"image/png","size":447721},{"uid":"a00857e672a43fff","name":"Screenshot: locations_verification_failure","source":"a00857e672a43fff.png","type":"image/png","size":153367},{"uid":"d7ff4664a0140245","name":"Locations Verification Failure Screenshot","source":"d7ff4664a0140245.png","type":"image/png","size":153367}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":5,"shouldDisplayMessage":false,"attachmentsCount":8},{"name":"Step 3: Navigate to QA job listings","time":{"start":1731546750833,"stop":1731546755783,"duration":4950},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Step 4: Apply filters and verify QA jobs listing","time":{"start":1731546755786,"stop":1731546779157,"duration":23371},"status":"passed","steps":[{"name":"Apply filters for Istanbul, Turkey and Quality Assurance","time":{"start":1731546755787,"stop":1731546778442,"duration":22655},"status":"passed","steps":[{"name":"Select option ''Istanbul, Turkey'' from dropdown","time":{"start":1731546755787,"stop":1731546766063,"duration":10276},"status":"passed","steps":[],"attachments":[{"uid":"e5ce1ddb7b5de648","name":"Dropdown Option Selection","source":"e5ce1ddb7b5de648.txt","type":"text/plain","size":33}],"parameters":[{"name":"dropdown_locator","value":"('css selector', '#select2-filter-by-location-container')"},{"name":"option_text","value":"'Istanbul, Turkey'"},{"name":"option_timeout","value":"15"}],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":1},{"name":"Select option ''Quality Assurance'' from dropdown","time":{"start":1731546766063,"stop":1731546776441,"duration":10378},"status":"passed","steps":[],"attachments":[{"uid":"f500e5d58bd20c67","name":"Dropdown Option Selection","source":"f500e5d58bd20c67.txt","type":"text/plain","size":34}],"parameters":[{"name":"dropdown_locator","value":"('css selector', '#select2-filter-by-department-container')"},{"name":"option_text","value":"'Quality Assurance'"},{"name":"option_timeout","value":"15"}],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":1}],"attachments":[{"uid":"260941728d54de56","name":"Filter Details","source":"260941728d54de56.attach","type":"text/plain","size":52}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":2,"shouldDisplayMessage":false,"attachmentsCount":3},{"name":"Check that job listings are displayed and match filter criteria","time":{"start":1731546778443,"stop":1731546779157,"duration":714},"status":"passed","steps":[],"attachments":[{"uid":"830eb98271694263","name":"Job Listing Count","source":"830eb98271694263.attach","type":"text/plain","size":44},{"uid":"3989b2bba56b5a79","name":"Position Verification","source":"3989b2bba56b5a79.attach","type":"text/plain","size":52},{"uid":"96783721d173df8e","name":"Department Verification","source":"96783721d173df8e.attach","type":"text/plain","size":29},{"uid":"19d60dcf13f18dc1","name":"Location Verification","source":"19d60dcf13f18dc1.attach","type":"text/plain","size":26}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":4}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":4,"shouldDisplayMessage":false,"attachmentsCount":7},{"name":"Step 5: Click 'View Role' and verify navigation to Lever application form page","time":{"start":1731546779157,"stop":1731546786993,"duration":7836},"status":"passed","steps":[{"name":"Open the first job listing and verify redirection to Lever application form","time":{"start":1731546779157,"stop":1731546786992,"duration":7835},"status":"passed","steps":[{"name":"Hover over the job title to reveal 'View Role' button","time":{"start":1731546779157,"stop":1731546781194,"duration":2037},"status":"passed","steps":[],"attachments":[{"uid":"36629c72f35a29b8","name":"Click Info","source":"36629c72f35a29b8.txt","type":"text/plain","size":27},{"uid":"f442b902ef748dec","name":"Tab Switch Info","source":"f442b902ef748dec.txt","type":"text/plain","size":33}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2},{"name":"Wait for page to load in new tab","time":{"start":1731546781194,"stop":1731546786195,"duration":5001},"status":"passed","steps":[],"attachments":[{"uid":"ad2b08b27a903056","name":"Wait Info","source":"ad2b08b27a903056.txt","type":"text/plain","size":38}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":1},{"name":"Verify URL in the new tab","time":{"start":1731546786196,"stop":1731546786992,"duration":796},"status":"passed","steps":[],"attachments":[{"uid":"b7fdbf9388def944","name":"Expected URL","source":"b7fdbf9388def944.txt","type":"text/plain","size":58},{"uid":"c35f50bba6942e9","name":"Actual URL","source":"c35f50bba6942e9.txt","type":"text/plain","size":81}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":3,"shouldDisplayMessage":false,"attachmentsCount":5}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":4,"shouldDisplayMessage":false,"attachmentsCount":5}],"attachments":[{"uid":"32646fde12d2afda","name":"Collected Errors","source":"32646fde12d2afda.txt","type":"text/plain","size":221}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":19,"shouldDisplayMessage":true,"attachmentsCount":22},"afterStages":[{"name":"driver::0","time":{"start":1731546787323,"stop":1731546796710,"duration":9387},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"Insider Careers Testing - Careers Page Validation"},{"name":"story","value":"Navigate, verify blocks, apply filters, and confirm job listings"},{"name":"tag","value":"@pytest.mark.usefixtures('driver')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_insider"},{"name":"host","value":"DESKTOP-Q3QIDPA"},{"name":"thread","value":"1252-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_insider"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('driver')"]},"source":"9f915e206f7f55ab.json","parameterValues":["'chrome'"]}